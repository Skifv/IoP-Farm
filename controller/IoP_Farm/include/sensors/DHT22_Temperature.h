/*
 * Датчик влажности и температуры DHT22 (AM2302)
 * 
 * Принцип работы:
 * 1. Физическая конструкция: 
 *    - Датчик состоит из компонента измерения влажности (емкостной) и термистора
 *    - Имеет встроенный чип для преобразования аналоговых сигналов в цифровые
 *    - В отличие от DHT11, датчик DHT22 более точный и имеет расширенный диапазон измерений
 * 
 * 2. Принцип измерения температуры:
 *    - В составе датчика имеется NTC термистор (с отрицательным температурным коэффициентом)
 *    - При изменении температуры меняется сопротивление термистора
 *    - Встроенный чип преобразует аналоговое значение сопротивления в цифровой сигнал
 *    - Измерение температуры происходит вместе с измерением влажности за один запрос
 *    - Для измерения используется одноканальный протокол передачи данных
 * 
 * 3. Подключение:
 *    - Пин 1 (VCC) → 3.3V
 *    - Пин 2 (DATA) → цифровой пин ESP32 (с подтягивающим резистором 4.7K к VCC)
 *    - Пин 3 (NC) → не используется
 *    - Пин 4 (GND) → GND ESP32
 *    - Требуется внешний подтягивающий резистор 4.7KОм между VCC и DATA
 *    - https://microkontroller.ru/esp32-projects/podklyuchenie-datchika-temperatury-i-vlazhnosti-dht11-dht22-k-esp32/
 * 
 * 4. Протокол связи:
 *    - Использует однопроводной интерфейс с собственным протоколом
 *    - Обмен данными начинается с сигнала запуска от микроконтроллера
 *    - Датчик отвечает преамбулой, за которой следуют 40 бит данных:
 *      - 16 бит данных о влажности (0-100% с точностью 0.1%)
 *      - 16 бит данных о температуре (-40 до 80°C с точностью 0.1°C)
 *      - 8 бит контрольной суммы для проверки целостности данных
 * 
 * 5. Характеристики:
 *    - Рабочее напряжение: 3.3V DC
 *    - Диапазон измерения влажности: 0-100% с точностью ±2-5%
 *    - Диапазон измерения температуры: -40°C до 80°C с точностью ±0.5°C
 *    - Частота опроса: не чаще чем раз в 2 секунды (0.5 Hz)
 *    - Размер: 15×25×8 мм
 * 
 * 6. Важные замечания:
 *    - Минимальный интервал между опросами датчика - 2 секунды
 *    - При более частом опросе датчик может нагреваться и выдавать некорректные данные
 *    - Для получения стабильных показаний рекомендуется делать задержку не менее 2 секунд
 *    - Не рекомендуется размещать датчик рядом с источниками тепла или под прямыми солнечными лучами
 */

#pragma once

#include "sensors/ISensor.h"
#include "config/constants.h"
#include <DHT.h>
#include <memory>

namespace farm::sensors
{
    class DHT22_Temperature : public ISensor
    {
    private:
        uint8_t pin;
        
        std::shared_ptr<DHT> dht;
        
        // Время последнего чтения данных с датчика (миллисекунды)
        unsigned long lastReadTime;
        
        // Минимальный интервал между чтениями (миллисекунды)
        static const unsigned long MIN_READ_INTERVAL = 2000; // 2 секунды согласно документации
        
    public:
        DHT22_Temperature(std::shared_ptr<log::ILogger> logger, uint8_t pin);
        
        ~DHT22_Temperature();
        
        bool initialize() override;
        
        // Считать температуру в градусах Цельсия
        float read() override;
    };
} 